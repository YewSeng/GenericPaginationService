// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaginationDemo.Models;

#nullable disable

namespace PaginationDemo.Migrations
{
    [DbContext(typeof(ExternalPatronDbContext))]
    [Migration("20240606010358_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PaginationDemo.Models.ASPNETUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("roles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ASPNETUser");
                });

            modelBuilder.Entity("PaginationDemo.Models.ExternalPatron", b =>
                {
                    b.Property<int>("FormID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FormID"));

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedByID")
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedByUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("AverageBetSize")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BillingAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedByID")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("DocumentID")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("FormStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("FrequencyOfVisitsPerMonth")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HighRiskPatronId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByID")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedByUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SelfExclusionStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SubmittedForApprovalByID")
                        .HasColumnType("longtext");

                    b.Property<string>("SubmittedForApprovalByUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("SubmittedForApprovalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("WinLoseRatio")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("FormID");

                    b.HasIndex("ApprovedByUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("SubmittedForApprovalByUserId");

                    b.ToTable("ExternalPatrons");
                });

            modelBuilder.Entity("PaginationDemo.Models.ExternalPatron", b =>
                {
                    b.HasOne("PaginationDemo.Models.ASPNETUser", "ApprovedByUser")
                        .WithMany()
                        .HasForeignKey("ApprovedByUserId");

                    b.HasOne("PaginationDemo.Models.ASPNETUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("PaginationDemo.Models.ASPNETUser", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId");

                    b.HasOne("PaginationDemo.Models.ASPNETUser", "SubmittedForApprovalByUser")
                        .WithMany()
                        .HasForeignKey("SubmittedForApprovalByUserId");

                    b.Navigation("ApprovedByUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("SubmittedForApprovalByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
